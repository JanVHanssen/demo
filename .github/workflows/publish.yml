name: Publish Backend & Deploy Frontend

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write

env:
  PROJECT_DIR: backend
  GROUP_ID: be.ucll.se
  ARTIFACT_ID: demo
  OWNER: JanVHanssen
  REPO: demo
  AZURE_WEBAPP_NAME: jvhbackend

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Bump version in pom.xml
        id: set-version
        run: |
          FILE=${{ env.PROJECT_DIR }}/pom.xml
          CURRENT_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" $FILE)
          echo "Current version: $CURRENT_VERSION"

          BASE=$(echo $CURRENT_VERSION | cut -d. -f1-2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$BASE.$NEW_PATCH"

          echo "New version: $NEW_VERSION"

          sed -i "s|<version>$CURRENT_VERSION</version>|<version>$NEW_VERSION</version>|" $FILE

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "ðŸ”– Bump version to $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push origin main --tags

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

  publish-backend:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "microsoft"
          java-version: "21"

      - name: Build JAR
        working-directory: ${{ env.PROJECT_DIR }}
        run: mvn -B clean package -DskipTests

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: ${{ env.PROJECT_DIR }}/target/*.jar

  deploy-backend-to-azure:
    needs: [publish-backend, bump-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "microsoft"
          java-version: "21"

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: ${{ env.PROJECT_DIR }}/target

      - name: Prepare JAR file
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          JAR_FILE=$(find target -name "*.jar" | head -n 1)
          if [ ! -f "$JAR_FILE" ]; then
            echo "::error::JAR file not found"
            exit 1
          fi
          cp "$JAR_FILE" app.jar

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ${{ env.PROJECT_DIR }}/app.jar

  deploy-frontend:
    needs: publish-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Deploy to Vercel
        working-directory: frontend
        run: |
          npm install -g vercel@latest
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
