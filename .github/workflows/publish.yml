name: Publish Backend & Deploy Frontend

on:
  push:
    branches: [main]

env:
  PROJECT_DIR: backend
  GROUP_ID: be.ucll.se
  ARTIFACT_ID: demo
  VERSION: 0.0.1-SNAPSHOT
  OWNER: JanVHanssen
  REPO: demo
  AZURE_WEBAPP_NAME: jvhbackend

jobs:
  publish-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"

      - name: Build and Publish
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          mvn -B clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  deploy-backend-to-azure:
    needs: publish-backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Prepare JAR file
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Optie 1: Gebruik lokaal gebouwd JAR
          if [ -f "target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar" ]; then
            cp "target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar" app.jar
          else
            # Optie 2: Download van GitHub Packages
            echo "Attempting to download artifact from GitHub Packages"
            mvn -X -B org.apache.maven.plugins:maven-dependency-plugin:3.7.0:get \
              -DremoteRepositories=github::::https://maven.pkg.github.com/${{ env.OWNER }}/${{ env.REPO }} \
              -Dartifact=${{ env.GROUP_ID }}:${{ env.ARTIFACT_ID }}:${{ env.VERSION }}:jar

            GROUP_PATH=$(echo ${{ env.GROUP_ID }} | tr '.' '/')
            echo "Downloaded files:"
            ls -l ~/.m2/repository/$GROUP_PATH/${{ env.ARTIFACT_ID }}/${{ env.VERSION }}/

            cp ~/.m2/repository/$GROUP_PATH/${{ env.ARTIFACT_ID }}/${{ env.VERSION }}/*.jar app.jar
          fi

          # Verifieer JAR
          if [ ! -f "app.jar" ]; then
            echo "::error::Failed to locate JAR file"
            ls -la target/ || true
            ls -la ~/.m2/repository/$(echo ${{ env.GROUP_ID }} | tr '.' '/')/ || true
            exit 1
          fi

          echo "JAR file ready:"
          ls -l app.jar

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D426C91C358F4B92BB9128D01E5D9E2E }}
          package: ${{ env.PROJECT_DIR }}/app.jar

  deploy-frontend:
    needs: publish-backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        working-directory: frontend
        run: |
          npm install -g vercel@latest
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
