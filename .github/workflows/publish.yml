name: Publish Backend & Deploy Frontend

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

env:
  PROJECT_DIR: backend
  GROUP_ID: be.ucll.se
  ARTIFACT_ID: demo
  VERSION: 0.0.1-SNAPSHOT
  OWNER: JanVHanssen
  REPO: demo
  AZURE_WEBAPP_NAME: jvhbackend

jobs:
  publish-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          server-id: github
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Maven for GitHub Packages
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Build and Publish
        working-directory: ${{ env.PROJECT_DIR }}
        run: mvn -B clean deploy -DskipTests

  deploy-backend-to-azure:
    needs: publish-backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          server-id: github
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Maven for GitHub Packages
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Prepare JAR file
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          echo "Attempting to download artifact from GitHub Packages"
          mvn -B org.apache.maven.plugins:maven-dependency-plugin:3.7.0:get \
            -DremoteRepositories=github::::https://maven.pkg.github.com/${{ env.OWNER }}/${{ env.REPO }} \
            -Dartifact=${{ env.GROUP_ID }}:${{ env.ARTIFACT_ID }}:${{ env.VERSION }}:jar \
            -Ddest=app.jar

          if [ ! -f "app.jar" ]; then
            echo "::error::Failed to download JAR"
            exit 1
          fi

          echo "JAR file details:"
          ls -l app.jar

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ${{ env.PROJECT_DIR }}/app.jar

  deploy-frontend:
    needs: publish-backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Deploy to Vercel
        working-directory: frontend
        run: |
          npm install -g vercel@latest
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
