name: CI - Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  PROJECT_DIR: backend

jobs:
  unit-tests:
    name: Backend Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "microsoft"
          java-version: "21"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Unit Tests
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Draai alleen unit tests (exclusief integration package)
          mvn -B test -Dtest="!be.ucll.se.demo.integration.**"

      - name: Upload Unit Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: ${{ env.PROJECT_DIR }}/target/surefire-reports/

  integration-tests:
    name: Backend Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests # Draait alleen als unit tests slagen

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "microsoft"
          java-version: "21"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Integration Tests
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Draai alleen integration tests - je H2 configuratie wordt automatisch gebruikt
          mvn -B test -Dtest="be.ucll.se.demo.integration.**"

      - name: Upload Integration Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: ${{ env.PROJECT_DIR }}/target/surefire-reports/

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run Frontend Tests
        run: npm test -- --coverage --watchAll=false

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage
          path: frontend/coverage/

  build-validation:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, frontend-tests]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "microsoft"
          java-version: "21"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Backend (tests already passed)
        working-directory: ${{ env.PROJECT_DIR }}
        run: mvn -B clean package -DskipTests

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build
